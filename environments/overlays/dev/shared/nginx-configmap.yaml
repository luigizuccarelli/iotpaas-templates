kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx
  labels:
    app: nginx-example
    template: nginx-example
data:
  nginx.conf: |
    worker_processes auto;
    pid /run/nginx.pid;

    events {
        worker_connections 768;
    }

    http {
            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            keepalive_timeout 65;
            types_hash_max_size 2048;

            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
            ssl_prefer_server_ciphers on;
            
            upstream producer1 { server message-producer.14west-trackmate-dev.svc.cluster.local:9000; }
            upstream authentication1 { server authentication.14west-trackmate-dev.svc.cluster.local:3000; }
            upstream affiliate1 { server affiliate.14west-trackmate-dev.svc.cluster.local:3000; }
            upstream analytics1 { server trackmate-couchbase-analytics-service.14west-trackmate-dev.svc.cluster.local:3000; }
            map $request_method-$uri $upstreamName {
              "~^(GET|POST|PATCH)-(/v1/clients|/clients/api-docs)" affiliate1;
              "~^(GET|POST)-(/v1/users|/users/api-docs)" authentication1;
              "~^(GET)-(/analytics/api/v1/sankey|/analytics/api/v1/campaigns|/analytics/api-docs)" analytics1;
              "~^(GET|POST)-(/api/v1/streamdata|/api/v1/api-docs)" producer1;
            }

            server {

              listen 8081;

              proxy_redirect           off;
              proxy_set_header         Host             $host;
              proxy_set_header         X-Real-IP        $remote_addr;
              proxy_set_header         X-Forwarded-For  $proxy_add_x_forwarded_for;
              proxy_set_header         X-Forwarded-Host $server_name;

              location /readiness {
                return 200;
              }
            
              location / {
              
              
                if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' '*';

                    add_header 'Access-Control-Allow-Credentials' 'true';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';

                    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-API-KEY,x-affiliate-name,authorization';

                    add_header 'Access-Control-Max-Age' 86400;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    add_header 'Content-Length' 0;
                    return 204; break;
                }
                
                 proxy_pass http://$upstreamName;
              }
              location /nginx_status {
                stub_status off;
                access_log   off;
                allow 127.0.0.1;
                deny all;
              }
         
            }

            log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request request_time $request_time' status $status upstream-status $upstream_status;

            access_log /var/log/nginx/access.log upstreamlog;
            error_log /var/log/nginx/error.log;

            gzip on;
            gzip_disable "msie6";
    }
